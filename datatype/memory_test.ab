import {len} from "std"
import * from "./memory.ab"

// Since we don't have `pub let`, we have to redefine constants.
let tag_unused = 0
let tag_num = 1
let tag_text = 2
let tag_t = 3
let tag_nil = 4
let tag_cons = 5


fun memory_equal(m1: [Text], m2: [Text]): Bool {
    if len(m1) != len(m2) {
        return false
    }
    // NOTE: don't use `loop i in 0..X` since it produces `seq 0 -1` when `X == 0`
    let i = 0
    loop {
        if len(m1) <= i {
            break
        }
        if m1[i] != m2[i] {
            return false
        }
        i += 1
    }
    return true
}

fun test_memory_new() {
    let mem1 = memory_new(0)
    if not memory_equal(mem1, [Text]) {
        echo "memory_new(0) = {mem1}"
        fail 1
    }

    let mem2 = memory_new(5)
    if not memory_equal(mem2, ["0", "0", "0", "0", "0"]) {
        echo "memory_new(5) = {mem2}"
        fail 1
    }

    let mem3 = memory_new(30)
    loop i in 0..10 {
        if memory_get_tag(mem3, i) != tag_unused {
            echo "memory_get_tag(mem3, {i}) = {memory_get_tag(mem3, i)}"
            echo "mem3 = {mem3}"
            fail 1
        }
    }
}

fun test_memory_grow() {
    let mem1 = [Text]
    mem1 = memory_grow(mem1)
    if not memory_equal(mem1, ["0", "0", "0", "0", "0"]) {
        echo "memory_grow(mem1) = {mem1}"
        fail 1
    }
    
    let mem2 = ["a", "b"]
    mem2 = memory_grow(mem2)
    if not memory_equal(mem2, ["a", "b", "0", "0", "0"]) {
        echo "memory_grow(mem2) = {mem2}"
        fail 1
    }

    let mem3 = ["a", "b", "c", "d"]
    mem3 = memory_grow(mem3)
    if not memory_equal(mem3, ["a", "b", "c", "d", "0", "0", "0", "0"]) {
        echo "memory_grow(mem3) = {mem3}"
        fail 1
    }
}

fun test_memory_get_set() {
    let mem = memory_new(100)
    let tag = 0
    let num_val = 0
    let text_val = ""
    let bool_val = false
    let cons_val_car = 0
    let cons_val_cdr = 0

    tag = memory_get_tag(mem, 0)
    if tag != tag_unused {
        echo "memory_get_tag(mem, 0) = {tag}"
        fail 1
    }
    mem = memory_put_num(mem, 0, 123)
    tag = memory_get_tag(mem, 0)
    if tag != tag_num {
        echo "memory_get_tag(mem, 0) = {tag}"
        fail 1
    }
    num_val = memory_get_num(mem, 0)
    if num_val != 123 {
        echo "memory_get_num(mem, 0) = {num_val}"
        fail 1
    }

    tag = memory_get_tag(mem, 1)
    if tag != tag_unused {
        echo "memory_get_tag(mem, 1) = {tag}"
        fail 1
    }
    mem = memory_put_text(mem, 1, "hello")
    tag = memory_get_tag(mem, 1)
    if tag != tag_text {
        echo "memory_get_tag(mem, 1) = {tag}"
        fail 1
    }
    text_val = memory_get_text(mem, 1)
    if text_val != "hello" {
        echo "memory_get_text(mem, 1) = {text_val}"
        fail 1
    }

    tag = memory_get_tag(mem, 2)
    if tag != tag_unused {
        echo "memory_get_tag(mem, 2) = {tag}"
        fail 1
    }
    mem = memory_put_t(mem, 2)
    tag = memory_get_tag(mem, 2)
    if tag != tag_t {
        echo "memory_get_tag(mem, 2) = {tag}"
        fail 1
    }

    tag = memory_get_tag(mem, 3)
    if tag != tag_unused {
        echo "memory_get_tag(mem, 3) = {tag}"
        fail 1
    }
    mem = memory_put_nil(mem, 3)
    tag = memory_get_tag(mem, 3)
    if tag != tag_nil {
        echo "memory_get_tag(mem, 3) = {tag}"
        fail 1
    }

    tag = memory_get_tag(mem, 4)
    if tag != tag_unused {
        echo "memory_get_tag(mem, 4) = {tag}"
        fail 1
    }
    mem = memory_put_cons(mem, 4, 123, 456)
    tag = memory_get_tag(mem, 4)
    if tag != tag_cons {
        echo "memory_get_tag(mem, 4) = {tag}"
        fail 1
    }
    cons_val_car = memory_get_cons_car(mem, 4)
    if cons_val_car != 123 {
        echo "memory_get_cons_car(mem, 4) = {cons_val_car}"
        fail 1
    }
    cons_val_cdr = memory_get_cons_cdr(mem, 4)
    if cons_val_cdr != 456 {
        echo "memory_get_cons_cdr(mem, 4) = {cons_val_cdr}"
        fail 1
    }
}

pub fun test_memory() {
    test_memory_new() failed {
        echo "test_memory_new failed"
        fail 1
    }
    test_memory_grow() failed {
        echo "test_memory_grow failed"
        fail 1
    }
    test_memory_get_set() failed {
        echo "test_memory_get_set failed"
        fail 1
    }
}

main {
    test_memory()?
}