import * from "./datatype.ab"

fun test_constructors() {
    let num = new_num(123)
    if not is_num(num) {
        echo "is_num(num) should be true"
        fail 1
    }
    if num_value(num) != 123 {
        echo "num_value(num) should be 123"
        fail 1
    }

    let text = new_text("Hello")
    if not is_text(text) {
        echo "is_text(text) should be true"
        fail 1
    }
    if text_value(text) != "Hello" {
        echo "text_value(text) should be Hello"
        fail 1
    }

    let t = new_t()
    if not is_t(t) {
        echo "is_t(t) should be true"
        fail 1
    }

    let nil = new_nil()
    if not is_nil(nil) {
        echo "is_nil(nil) should be true"
        fail 1
    }

    let pair = new_cons(new_text("first"), new_num(2))
    if not is_cons(pair) {
        echo "is_cons(pair) should be true"
        fail 1
    }
    if not is_text(car(pair)) {
        echo "car(pair) should be text"
        fail 1
    }
    if text_value(car(pair)) != "first" {
        echo "car(pair) should be 'first'"
        fail 1
    }
    if not is_num(cdr(pair)) {
        echo "cdr(pair) should be num"
        fail 1
    }
    if num_value(cdr(pair)) != 2 {
        echo "cdr(pair) should be 2"
        fail 1
    }

    let nested = new_cons(new_text("a"), new_cons(new_text("b"), new_cons(new_text("c"), new_nil())))
    if not is_cons(nested) {
        echo "is_cons(nested) should be true"
        fail 1
    }
    if not is_text(car(nested)) {
        echo "is_text(car(nested)) should be true"
        fail 1
    }
    if text_value(car(nested)) != "a" {
        echo "text_value(car(nested)) should be 'a', got {text_value(car(nested))}"
        echo "{nested}"
        fail 1
    }
    if not is_cons(cdr(nested)) {
        echo "is_cons(cdr(nested)) should be true"
        fail 1
    }
    if not is_text(car(cdr(nested))) {
        echo "is_text(car(cdr(nested))) should be true"
        fail 1
    }
    if text_value(car(cdr(nested))) != "b" {
        echo "text_value(car(cdr(nested))) should be 'b'"
        fail 1
    }
}

pub fun test_datatype() {
    test_constructors() failed {
        echo "test_constructors failed"
        fail 1
    }
}

main {
    test_datatype()?
}
