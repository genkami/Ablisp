import * from "./error.ab"
import * from "./object.ab"
import * from "./env.ab"
import * from "./runtime_corelib.ab"
import * from "./testing.ab"
import * from "./eval_test_utils.ab"

fun test_runtime_corelib_syntax_quote() {
    test_section("test_runtime_corelib_syntax_quote")
    test_expectation("it should return an unevaluated argument")
    debug_clear_all_objects()
    let env = runtime_corelib_import(new_env())
    let list = new_nil()
    list = new_cons(new_symbol("b"), list)
    list = new_cons(new_symbol("a"), list)
    env = env_define(env, new_symbol("list"), list)
    assert_exprs_equal("(quote 1)", "1", env)?
    assert_exprs_equal("(quote t)", "t", env)?
    assert_exprs_equal("(quote nil)", "nil", env)?
    assert_exprs_equal("(quote (a b))", "list", env)?
}

main {
    test_runtime_corelib_syntax_quote()?
}
